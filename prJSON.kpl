<?xml version="1.0" encoding="UTF-8"?><pag xmlns="www.kepler.com.mx/2003/KSchema" roles="" tit="Hello world">	<grp dim="1,-1,10,20" brdr="2,1" clr="0,0,0" bclr="213,210,210">		<br/><sp/><txt>Hola Mundo</txt><tab/>		<inp id="clave" dim="13,1" brdr="2,1" bclr="255,255,255"/>		<br/></grp><script>	InstallDriver("KDB75");	class Main {		var frn,kdb;		/* PAGE PARAMETERS		param(0) = 		*/		fun Main() {			frn=new FRNT;			kdb=new KDB;			kdb.connect();			var xml;			//NOTA: JSON POR DEFAULT NO MANEJA ATRIBUTOS, entonces es mejor manejar todo como elementos hijo en xml. Kepler implemento una nomenclatura especial para poder distinguir entre hijos y atributos, pero esto solo se entenderá por kepler			setXml(xml,"hijo0","nieto0","Valor de nieto 0, de {hijo} 0");			setXml(xml,"hijo0","nieto1","Valor de nieto 1, de hijo 0 22\"");			setXml(xml,"hijo1","nieto10","Valor de nieto 10 de hijo 1");			setXml(xml,"hijo1","nieto11","Valor de nieto 11 de hijo 1");			//frn.set("xmlData",xml);frn.dialog("manGenViewXml","xmlData");			//En el formato se necesita especificar llave o corchete por cada nivel 			var json=getXmlJson(xml,"{{");//En ambos niveles respetara los nombres, pues se especifca manejar como nombre/valor			//var json=getXmlJson(xml,"[{");//En primer nivel no se muestra nombre de elemento, pues se especifica que se maneje como array, y solo el segundo nivel lo maneja nombrado			kdb.save("_cubo.xml",json);			//json=delScpScn("{  \"hijo0\" :  {  \"nieto0\" : \"Valor de nieto 0, de hijo 0\" ,  \"nieto1\" : \"Valor de nieto 1, de hijo 0\" }  ,  \"hijo1\" :  {  \"nieto10\" : 1423 ,  \"nieto11\" : null }  }");			var xmlRes;			setXmlJson(xmlRes,json);			frn.set("xmlData",xmlRes);frn.dialog("manGenViewXml","xmlData");								}	}</script></pag>